/**
 * Resource definition for Resource annotation
 * @remark https://docs.oracle.com/javase/7/docs/api/javax/annotation/Resource.html
 */
export declare type TResource = {
    property: string;
    required: boolean;
    url: string;
};
/**
 * Resource params for Resource annotation
 * @remark https://docs.oracle.com/javase/7/docs/api/javax/annotation/Resource.html
 */
export declare type TResourceParams = {
    required?: boolean;
};
export declare const postConstructHooksToken: unique symbol;
export declare const preDestroyHooksToken: unique symbol;
export declare const transactionalToken: unique symbol;
export declare const resourceDefinitionToken: unique symbol;
export declare const resourceDependenciesToken: unique symbol;
declare type ITransactionalParams = {
    target?: any;
};
/**
 * Bean lifecycle hook.
 * @remark https://docs.oracle.com/javaee/7/api/javax/annotation/PostConstruct.html
 */
export declare function PostConstruct(target: any, key: any, descriptor: any): void;
/**
 * Bean lifecycle hook.
 * @remark https://docs.oracle.com/javaee/7/api/javax/annotation/PreDestroy.html
 */
export declare function PreDestroy(target: any, key: any, descriptor: any): void;
/**
 * Declarative transaction.
 * Opens transaction for first deep level and keep it to deeps calls for transactional-annotated methods.
 * @remark https://docs.oracle.com/javaee/7/api/javax/transaction/Transactional.html
 * @param params - transaction params
 */
export declare function Transactional(params?: ITransactionalParams): (target: any, key: any, descriptor: any) => any;
/**
 * Autowiring json resource from browser url.
 * At bean instantiation time.
 * @remark https://docs.oracle.com/javase/8/docs/api/javax/annotation/Resource.html
 * @param url - browser url to resource file
 * @param params - resource params
 */
export declare function Resource(url: string, params?: TResourceParams): (target: any, propertyKey: string) => void;
export {};
