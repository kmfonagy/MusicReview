import { ApplicationEvent } from "./applicationEvent";
import { IApplicationContext } from "./applicationContext";
/**
 * Base class for events raised for an ApplicationContext.
 * @remark https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/context/event/ApplicationContextEvent.html
 */
export declare abstract class ApplicationContextEvent extends ApplicationEvent {
    source: IApplicationContext;
    constructor(source: IApplicationContext);
}
/**
 * Event fired when context started and ready to work.
 * @remark https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/context/event/ContextStartedEvent.html
 */
export declare class ApplicationContextStartEvent extends ApplicationContextEvent {
}
/**
 * Event fired when context stopped and all beans destroyed.
 * @remark https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/event/package-summary.html
 */
export declare class ApplicationContextStopEvent extends ApplicationContextEvent {
}
/**
 * Event fired when exception catched in throwable-annotated function of bean.
 * @remark https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/BeansException.html
 */
export declare class ApplicationContextBeanRuntimeExceptionEvent extends ApplicationContextEvent {
    exception: Error;
    constructor(source: IApplicationContext, exception: Error);
}
