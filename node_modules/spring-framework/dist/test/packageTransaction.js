"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SimpleActor = exports.TestTransactionContext = exports.SimpleTransactionManager = exports.SimpleTransaction = exports.SimpleActorToken = exports.packageTransaction = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _javax = require("../javax");

var _orgSpringframework = require("../org.springframework.transaction");

var _orgSpringframework2 = require("../org.springframework.context");

var __extends = undefined && undefined.__extends || function () {
    var _extendStatics = function extendStatics(d, b) {
        _extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
            d.__proto__ = b;
        } || function (d, b) {
            for (var p in b) {
                if (b.hasOwnProperty(p)) d[p] = b[p];
            }
        };
        return _extendStatics(d, b);
    };
    return function (d, b) {
        _extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
    var c = arguments.length,
        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
        d;
    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    }return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = undefined && undefined.__metadata || function (k, v) {
    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

//
// Tokens
//
var packageTransaction = exports.packageTransaction = "org.springframework.test.transaction";
var SimpleActorToken = exports.SimpleActorToken = Symbol("SimpleActor");
//
// Simple Transaction Implemntation
//
var SimpleTransaction = /** @class */function (_super) {
    __extends(SimpleTransaction, _super);
    function SimpleTransaction() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.commites = 0;
        _this.rollbacks = 0;
        return _this;
    }
    SimpleTransaction.prototype.commit = function () {
        this.commites += 1;
        _super.prototype.commit.call(this);
    };
    SimpleTransaction.prototype.rollback = function () {
        this.commites += 1;
        _super.prototype.rollback.call(this);
    };
    return SimpleTransaction;
}(_orgSpringframework.AbstractTransaction);
exports.SimpleTransaction = SimpleTransaction;

var SimpleTransactionManager = /** @class */function (_super) {
    __extends(SimpleTransactionManager, _super);
    function SimpleTransactionManager() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SimpleTransactionManager.prototype.begin = function () {
        this.transaction = new SimpleTransaction();
        _super.prototype.begin.call(this);
    };
    return SimpleTransactionManager;
}(_orgSpringframework.AbstractTransactionManager);
exports.SimpleTransactionManager = SimpleTransactionManager;
//
// Context
//

var TestTransactionContext = /** @class */function (_super) {
    __extends(TestTransactionContext, _super);
    function TestTransactionContext() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TestTransactionContext;
}(_orgSpringframework2.AbstractApplicationContext);
exports.TestTransactionContext = TestTransactionContext;

var SimpleActor = /** @class */function () {
    function SimpleActor() {
        this.transactionManager = new SimpleTransactionManager();
    }
    SimpleActor.prototype.methodWithoudErrors = function () {};
    SimpleActor.prototype.methodWithErrors = function () {
        throw new Error("my test error");
    };
    SimpleActor.prototype.methodDeepWithoutErrors = function () {
        return this.method1();
    };
    SimpleActor.prototype.method1 = function () {
        return 1;
    };
    __decorate([(0, _javax.Transactional)(), __metadata("design:type", Function), __metadata("design:paramtypes", []), __metadata("design:returntype", void 0)], SimpleActor.prototype, "methodWithoudErrors", null);
    __decorate([(0, _javax.Transactional)(), __metadata("design:type", Function), __metadata("design:paramtypes", []), __metadata("design:returntype", void 0)], SimpleActor.prototype, "methodWithErrors", null);
    __decorate([(0, _javax.Transactional)(), __metadata("design:type", Function), __metadata("design:paramtypes", []), __metadata("design:returntype", void 0)], SimpleActor.prototype, "methodDeepWithoutErrors", null);
    __decorate([(0, _javax.Transactional)(), __metadata("design:type", Function), __metadata("design:paramtypes", []), __metadata("design:returntype", void 0)], SimpleActor.prototype, "method1", null);
    SimpleActor = __decorate([(0, _orgSpringframework2.Bean)(SimpleActorToken)], SimpleActor);
    return SimpleActor;
}();
exports.SimpleActor = SimpleActor;
//# sourceMappingURL=packageTransaction.js.map