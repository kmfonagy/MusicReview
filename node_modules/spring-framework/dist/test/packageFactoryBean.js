"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Resolver = exports.TestBean_3 = exports.TestBean_2 = exports.TestBean_1 = exports.TestContext = exports.TestBean_2_ResolveToken = exports.ResolverToken = exports.TestBean_3_Token = exports.TestBean_2_Token = exports.TestBean_1_Token = exports.packagePoc = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _orgSpringframework = require("../org.springframework.beans");

var _orgSpringframework2 = require("../org.springframework.context");

var __extends = undefined && undefined.__extends || function () {
    var _extendStatics = function extendStatics(d, b) {
        _extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
            d.__proto__ = b;
        } || function (d, b) {
            for (var p in b) {
                if (b.hasOwnProperty(p)) d[p] = b[p];
            }
        };
        return _extendStatics(d, b);
    };
    return function (d, b) {
        _extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
    var c = arguments.length,
        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
        d;
    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    }return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = undefined && undefined.__metadata || function (k, v) {
    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

//
// Tokens
//
var packagePoc = exports.packagePoc = "org.springframework.test.poc";
var TestBean_1_Token = exports.TestBean_1_Token = Symbol("TestBean_1");
var TestBean_2_Token = exports.TestBean_2_Token = Symbol("TestBean_2");
var TestBean_3_Token = exports.TestBean_3_Token = Symbol("TestBean_3");
var ResolverToken = exports.ResolverToken = Symbol("Resolver");
var TestBean_2_ResolveToken = exports.TestBean_2_ResolveToken = Symbol("TestBean_2_Resolve");
//
// Contexts
//
var TestContext = /** @class */function (_super) {
    __extends(TestContext, _super);
    function TestContext() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TestContext.prototype.configure = function () {
        _super.prototype.configure.call(this, new Map([]));
    };
    return TestContext;
}(_orgSpringframework2.AbstractApplicationContext);
exports.TestContext = TestContext;
//
// Beans
//

var TestBean_1 = /** @class */function () {
    function TestBean_1() {}
    TestBean_1.prototype.getName = function () {
        return "1";
    };
    TestBean_1 = __decorate([(0, _orgSpringframework2.Bean)(TestBean_1_Token, { scope: "singleton" })], TestBean_1);
    return TestBean_1;
}();
exports.TestBean_1 = TestBean_1;

var TestBean_2 = /** @class */function () {
    function TestBean_2() {}
    TestBean_2.prototype.getName = function () {
        return "2";
    };
    __decorate([(0, _orgSpringframework.Autowired)("bean1"), __metadata("design:type", TestBean_1)], TestBean_2.prototype, "bean1", void 0);
    TestBean_2 = __decorate([(0, _orgSpringframework2.Bean)(TestBean_2_Token, { scope: "singleton" })], TestBean_2);
    return TestBean_2;
}();
exports.TestBean_2 = TestBean_2;

var TestBean_3 = /** @class */function () {
    function TestBean_3() {}
    TestBean_3.prototype.getName = function () {
        return "3";
    };
    __decorate([(0, _orgSpringframework.Autowired)(TestBean_2_Token, { resolve: TestBean_2_ResolveToken }), __metadata("design:type", TestBean_2)], TestBean_3.prototype, "bean2", void 0);
    TestBean_3 = __decorate([(0, _orgSpringframework2.Bean)(TestBean_3_Token, { scope: "singleton", resolver: ResolverToken })], TestBean_3);
    return TestBean_3;
}();
exports.TestBean_3 = TestBean_3;

var Resolver = /** @class */function () {
    function Resolver() {}
    Resolver.prototype.resolve = function (path, bean) {
        switch (path) {
            case TestBean_2_ResolveToken:
                return [["bean1", TestBean_1_Token]];
        }
        return null;
    };
    Resolver = __decorate([(0, _orgSpringframework2.Bean)(ResolverToken)], Resolver);
    return Resolver;
}();
exports.Resolver = Resolver;
//# sourceMappingURL=packageFactoryBean.js.map