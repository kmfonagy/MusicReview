"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ConsumerTest = exports.ApplicationTestContext = exports.ConfigurationPlugins = exports.ProviderPlugin2 = exports.ProviderPlugin1 = exports.Consumer = exports.ProviderImpl = exports.ConfigurationPluginsToken = exports.ConfigurationToken = exports.ProviderPluginToken2 = exports.ProviderPluginToken1 = exports.ProviderImplToken = exports.ProviderToken = exports.ConsumerTestToken = exports.ConsumerToken = exports.ApplicationContextToken = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _ = require("..");

var __extends = undefined && undefined.__extends || function () {
    var _extendStatics = function extendStatics(d, b) {
        _extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
            d.__proto__ = b;
        } || function (d, b) {
            for (var p in b) {
                if (b.hasOwnProperty(p)) d[p] = b[p];
            }
        };
        return _extendStatics(d, b);
    };
    return function (d, b) {
        _extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
    var c = arguments.length,
        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
        d;
    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    }return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = undefined && undefined.__metadata || function (k, v) {
    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

//
// Tokens
//
var ApplicationContextToken = exports.ApplicationContextToken = Symbol();
var ConsumerToken = exports.ConsumerToken = Symbol();
var ConsumerTestToken = exports.ConsumerTestToken = Symbol();
var ProviderToken = exports.ProviderToken = Symbol();
var ProviderImplToken = exports.ProviderImplToken = Symbol();
var ProviderPluginToken1 = exports.ProviderPluginToken1 = Symbol();
var ProviderPluginToken2 = exports.ProviderPluginToken2 = Symbol();
var ConfigurationToken = exports.ConfigurationToken = Symbol();
var ConfigurationPluginsToken = exports.ConfigurationPluginsToken = Symbol();
//
// Provider.ts
//
var ProviderImpl = /** @class */function () {
    function ProviderImpl() {}
    //
    // Api
    //
    ProviderImpl.prototype.provide = function () {
        return 1;
    };
    ProviderImpl = __decorate([(0, _.Bean)(ProviderImplToken)], ProviderImpl);
    return ProviderImpl;
}();
exports.ProviderImpl = ProviderImpl;
//
// Consumer.ts
//

var Consumer = /** @class */function () {
    function Consumer() {}
    //
    // Api
    //
    Consumer.prototype.consume = function () {
        return this.provider.provide();
    };
    __decorate([(0, _.Autowired)(ProviderToken), __metadata("design:type", Object)], Consumer.prototype, "provider", void 0);
    Consumer = __decorate([(0, _.Bean)(ConsumerToken)], Consumer);
    return Consumer;
}();
exports.Consumer = Consumer;
//
// Provider plugin 1.ts
//

var ProviderPlugin1 = /** @class */function () {
    function ProviderPlugin1() {}
    ProviderPlugin1.prototype.construct = function () {
        var _this = this;
        this.context.set(ProviderToken, _.FactoryBean.of(function () {
            return _this;
        }));
    };
    //
    // Api
    //
    ProviderPlugin1.prototype.provide = function () {
        return this.provider.provide() + 1;
    };
    __decorate([(0, _.Autowired)(ApplicationContextToken), __metadata("design:type", Object)], ProviderPlugin1.prototype, "context", void 0);
    __decorate([(0, _.Autowired)(ProviderToken), __metadata("design:type", Object)], ProviderPlugin1.prototype, "provider", void 0);
    __decorate([_.PostConstruct, __metadata("design:type", Function), __metadata("design:paramtypes", []), __metadata("design:returntype", void 0)], ProviderPlugin1.prototype, "construct", null);
    ProviderPlugin1 = __decorate([(0, _.Bean)(ProviderPluginToken1)], ProviderPlugin1);
    return ProviderPlugin1;
}();
exports.ProviderPlugin1 = ProviderPlugin1;
//
// Provider plugin 2.ts
//

var ProviderPlugin2 = /** @class */function () {
    function ProviderPlugin2() {}
    ProviderPlugin2.prototype.construct = function () {
        var _this = this;
        this.context.set(ProviderToken, _.FactoryBean.of(function () {
            return _this;
        }));
    };
    //
    // Api
    //
    ProviderPlugin2.prototype.provide = function () {
        return this.provider.provide() + 2;
    };
    __decorate([(0, _.Autowired)(ApplicationContextToken), __metadata("design:type", Object)], ProviderPlugin2.prototype, "context", void 0);
    __decorate([(0, _.Autowired)(ProviderToken), __metadata("design:type", Object)], ProviderPlugin2.prototype, "provider", void 0);
    __decorate([_.PostConstruct, __metadata("design:type", Function), __metadata("design:paramtypes", []), __metadata("design:returntype", void 0)], ProviderPlugin2.prototype, "construct", null);
    ProviderPlugin2 = __decorate([(0, _.Bean)(ProviderPluginToken2)], ProviderPlugin2);
    return ProviderPlugin2;
}();
exports.ProviderPlugin2 = ProviderPlugin2;
//
// Configuration.ts
//

var ConfigurationPlugins = /** @class */function () {
    function ConfigurationPlugins() {}
    ConfigurationPlugins.prototype.providerBean = function () {
        var provider = this.provider;
        var currentProviderBeanMap = new Map([[ProviderToken, _.FactoryBean.of(function () {
            return provider;
        })]]);
        // apply optional plugin 1
        var plugin1 = this.context.getBean(ProviderPluginToken1, false, currentProviderBeanMap);
        provider = plugin1 || provider;
        // apply optional plugin 2
        var plugin2 = this.context.getBean(ProviderPluginToken2, false, currentProviderBeanMap);
        provider = plugin2 || provider;
        return provider;
    };
    __decorate([(0, _.Autowired)(ApplicationContextToken), __metadata("design:type", Object)], ConfigurationPlugins.prototype, "context", void 0);
    __decorate([(0, _.Autowired)(ProviderToken), __metadata("design:type", Object)], ConfigurationPlugins.prototype, "provider", void 0);
    __decorate([(0, _.bean)(ProviderToken), __metadata("design:type", Function), __metadata("design:paramtypes", []), __metadata("design:returntype", Object)], ConfigurationPlugins.prototype, "providerBean", null);
    ConfigurationPlugins = __decorate([(0, _.Configuration)(ConfigurationPluginsToken)], ConfigurationPlugins);
    return ConfigurationPlugins;
}();
exports.ConfigurationPlugins = ConfigurationPlugins;
//
// applicationTestContext.ts
//

var ApplicationTestContext = /** @class */function (_super) {
    __extends(ApplicationTestContext, _super);
    function ApplicationTestContext() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ApplicationTestContext.prototype.configure = function () {
        _super.prototype.configure.call(this, new Map([[ConsumerToken, ConsumerTestToken], [ConfigurationToken, ConfigurationPluginsToken], [ProviderToken, ProviderImplToken]]));
    };
    ApplicationTestContext.prototype.start = function () {
        // bootstrap context
        // instantiate bean to be overrided
        this.getBean(ProviderToken);
        // instatiate configuration with beans to override provider
        this.getBean(ConfigurationToken);
        // instantiate consumer with overrided provider
        this.getBean(ConsumerToken);
        _super.prototype.start.call(this);
    };
    return ApplicationTestContext;
}(_.AbstractApplicationContext);
exports.ApplicationTestContext = ApplicationTestContext;
//
// ConsumerTest.ts
//

var ConsumerTest = /** @class */function (_super) {
    __extends(ConsumerTest, _super);
    function ConsumerTest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ConsumerTest.prototype.test1 = function () {
        expect(this.consume()).toBe(4);
    };
    __decorate([_.Test, __metadata("design:type", Function), __metadata("design:paramtypes", []), __metadata("design:returntype", void 0)], ConsumerTest.prototype, "test1", null);
    ConsumerTest = __decorate([(0, _.Bean)(ConsumerTestToken)], ConsumerTest);
    return ConsumerTest;
}(Consumer);
exports.ConsumerTest = ConsumerTest;
//# sourceMappingURL=packagePlugins.js.map